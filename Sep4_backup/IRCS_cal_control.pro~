pro IRCS_cal_control, nparam_wl, nparam_gh, nparam_gh_lin, nparam_other, niter, random=random, wl_guess=wl_guess, gh_guess=gh_guess, gh_lin_guess=gh_lin_guess, other_guess=other_guess

;Set lin_switch
if nparam_gh_lin ne 0 then begin
    lin_switch=1 
    if nparam_gh_lin ne nparam_gh then message, "Unequal number of 0th and linear parameters for gh bases"
    endif else lin_switch=0

;Turn random on/off
if n_elements(random) eq 0 then random=0

;;;Wavelength parameters for amoeba
    ;Potential entries in wl_guess array
wl_guess_all=dblarr(7)
wl_guess_all[0]=2.2912188d0                     
wl_guess_all[1]=6.2542585d-5                    
wl_guess_all[2]=-2.063680d-9                   
wl_guess_all[3]=-1.6401032d-12                  
wl_guess_all[4]=-8.863d-17
wl_guess_all[5]=0d0
wl_guess_all[6]=0d0
                                ;Same for scale
wl_scale_all=dblarr(7)
wl_scale_all[0]=5d-5
wl_scale_all[1]=5d-8
wl_scale_all[2]=1d-11
wl_scale_all[3]=1d-13
wl_scale_all[4]=5d-18
wl_scale_all[5]=1d-23
wl_scale_all[6]=1d-31
    
;;;Gauss-Hermite parameters for amoeba
gh_guess_all=dblarr(11)
gh_guess_all[0]=6.1341822d0 ;0.67443299d0*oversamp		;guess for gaussian sigma
gh_guess_all[1]=0d0 
gh_guess_all[2]=0d0 
gh_guess_all[3]=0d0 
gh_guess_all[4]=0d0
gh_guess_all[5]=0d0
gh_guess_all[6]=0d0
gh_guess_all[7]=0d0
gh_guess_all[8]=0d0
gh_guess_all[9]=0d0
gh_guess_all[10]=0d0

gh_scale_all=dblarr(11)
gh_scale_all[0]= 1d0
gh_scale_all[1]=0.1d0
gh_scale_all[2]=0.1d0
gh_scale_all[3]=0.1d0
gh_scale_all[4]=0.1d0
gh_scale_all[5]=0.1d0
gh_scale_all[6]=0.1d0
gh_scale_all[7]=0.1d0
gh_scale_all[8]=0.1d0
gh_scale_all[9]=0.1d0
gh_scale_all[10]=0.1d0

;;;Gauss-Hermite parameters for amoeba
gh_lin_guess_all=dblarr(11)
gh_lin_guess_all[0]=0d0	
gh_lin_guess_all[1]=0d0	
gh_lin_guess_all[2]=0d0
gh_lin_guess_all[3]=0d0
gh_lin_guess_all[4]=0d0
gh_lin_guess_all[5]=0d0
gh_lin_guess_all[6]=0d0
gh_lin_guess_all[7]=0d0
gh_lin_guess_all[8]=0d0
gh_lin_guess_all[9]=0d0
gh_lin_guess_all[10]=0d0

gh_lin_scale_all=dblarr(11)
gh_lin_scale_all[0]=1d-4
gh_lin_scale_all[1]=1d-4
gh_lin_scale_all[2]=1d-4
gh_lin_scale_all[3]=1d-4
gh_lin_scale_all[4]=1d-4
gh_lin_scale_all[5]=1d-4
gh_lin_scale_all[6]=1d-4
gh_lin_scale_all[7]=1d-4
gh_lin_scale_all[8]=1d-4
gh_lin_scale_all[9]=1d-4
gh_lin_scale_all[10]=1d-4

for run=0,niter-1 do begin
    
    ;;;Wavelength parameters for amoeba
    ;Now make arrays with proper number of parameters
    if n_elements(wl_guess) eq 0 then begin
        wl_guess=dblarr(nparam_wl)
        for i=0,nparam_wl-1 do wl_guess[i]=wl_guess_all[i]
    endif
    wl_scale=dblarr(nparam_wl)
    for i=0,nparam_wl-1 do wl_scale[i]=wl_scale_all[i]
    

    ;Shift guesses by a random amount
    if random eq 1 then begin
        random_shift_wl=randomn(seed, nparam_wl, /double)*(0.5d0)*wl_scale
        random_shift_wl[0]=0d0  ;don't shift 0th order guess
        wl_guess=wl_guess+random_shift_wl
        endif

    
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;Gauss-Hermite parameters for amoeba

    if n_elements(gh_guess) eq 0 then begin
        gh_guess=dblarr(nparam_gh)
        for i=0,nparam_gh-1 do gh_guess[i]=gh_guess_all[i]
    endif
    gh_scale=dblarr(nparam_gh)
    for i=0,nparam_gh-1 do gh_scale[i]=gh_scale_all[i]
    

    ;Shift guesses by a random amount
    if random eq 1 then begin
        random_shift_gh=randomn(seed, nparam_gh, /double)*gh_scale*(0.5d0)
        gh_guess=gh_guess+random_shift_gh
    endif
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;Gauss-Hermite linear parameters for amoeba

if lin_switch eq 1 then begin
    if n_elements(gh_lin_guess) eq 0 then begin
        gh_lin_guess=dblarr(nparam_gh_lin)
        for i=0,nparam_gh_lin-1 do gh_lin_guess[i]=gh_lin_guess_all[i]
    endif
    gh_lin_scale=dblarr(nparam_gh)
    for i=0,nparam_gh-1 do gh_lin_scale[i]=gh_lin_scale_all[i]

    ;Shift guesses by a random amount
    if random eq 1 then begin
        random_shift_gh_lin=randomn(seed, nparam_gh, /double)*gh_lin_scale*(0.5d0)
        gh_lin_guess=gh_lin_guess+random_shift_gh_lin
    endif
endif else begin
    gh_lin_guess=[0]
    gh_lin_scale=[0]
endelse
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;;Other parameters for amoeba
if n_elements(other_guess) eq 0 then begin
    other_guess=dblarr(nparam_other)
    for i=1,nparam_other-1 do other_guess[i]=1d0
    other_guess[0]=0.96769279d	  		;guess for tau
endif

other_scale=dblarr(nparam_other)
for i=0,nparam_other-1 do other_scale[i]=0.1d0
    

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;



IRCS_cal, wl_guess, wl_scale, gh_guess, gh_scale, gh_lin_guess, gh_lin_scale, other_guess, other_scale, run, lin_switch=lin_switch

endfor

end
