function cb_hermite, n, x_in, sigma

;n is order, x is the (x-x0) term in the Gaussian, and sigma is the
;sigma of the Gaussian, in the same units as x_in

n=n*1d0

x=x_in/sigma

h=0d

m=n/2l

for i=0l, m do h=h+(-1d0)^(i*1d0)*(2d0*x)^(n-2d0*i)/(factorial(i)*factorial(n-2*i))

output=(2d0^n*factorial(n)*Sqrt(!pi))^(-0.5d0)*factorial(n)*h*exp(-x_in^2d0/(2d0*sigma^2d0))

return, output

end



function sg_hermite, order, x_in, sigma

n=order*1d0

x=x_in/sigma

h=0d

m=n/2l

case order of
    0: h=1d0
    1: h=2*x
    2: h=4*x^2-2
    3: h=8*x^3-12*x
    4: h=16*x^4-48*x^2+12
    5: h=32*x^5-160*x^3+120*x
    6: h=64*x^6-480*x^4+720*x^2-120
    7: h=128*x^7-1344*x^5+3360*x^3-1680*x
    8: h=256*x^8-3584*x^6+13440*x^4-13440*x^2+1680
    9: h=512*x^9-9216*x^7+48384*x^5-80649*x^3+30240*x
    10: h=1024*x^10-23040*x^8+161280*x^6-403200*x^4+302400*x^2-30240
endcase

output=(2d0^n*factorial(n)*Sqrt(!pi))^(-0.5d0)*h*exp(-x_in^2d0/(2d0*sigma^2d0))



return, output

end




pro gh_test

x=dindgen(51)-25
sigma=5d0

for o=0,4 do begin
;;;CB
cb_tic=tic()
lsf_cb=cb_hermite(o, x, sigma)

cb_t=toc(cb_tic)

plot, x, lsf_cb
print, "CB Total : ", total(lsf_cb)
print, "CB Time : ", cb_t

;;;SG
sg_tic=tic()
lsf_sg=sg_hermite(o, x, sigma)
sg_t=toc(sg_tic)

oplot, x, lsf_sg, color=200
print, "SG Total : ", total(lsf_sg)
print, "SG Time : ", sg_t

stop

endfor

end
